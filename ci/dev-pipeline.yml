# This is the pipeline to run the BDD tests on prod, pre-prod and dev.
# The triggers are daily for now, a ticket has been written to address push to branch triggers.
env_setups:
  general: &general_params
    AWS_DEFAULT_REGION: eu-west-2
    S3_ACCOUNT_STATE_KEY: ons-smlportal-dev.account.tfstate
    S3_ENVIRONMENT_STATE_KEY: ons-smlportal-dev.environment.tfstate
    S3_NAME: statistical-methods-library-tf-state
    S3_KEY: sml-portal.tfstate
    CONCOURSE_ACCESS_TOKEN: ((github_access_token))
    SHARED_ACCOUNT_ROLE: &shared_account_role arn:aws:iam::289259348294:role/spp-concourse-access-prod

  general_dev: &general_dev_params
    TF_VAR_deployment_type: dev
    <<: *general_params

  github_pull_creds: &github_pull_creds
    username: ((github_access_token))
    password: x-oauth-basic

  # -------------------

  sml_dev: &sml_dev_setup
    <<: *general_dev_params
    ACCOUNT_NAME: &account sml_dev
    AWS_ACCOUNT_ID: 115311790871
    AWS_SERVICE_ROLE: &role arn:aws:iam::115311790871:role/spp-concourse-sml-deployment-dev
    TF_VAR_deployment_role: *role
    TF_VAR_environment: dev
    TF_VAR_account: *account


resource_types:
  - name: pull-request
    type: docker-image
    source:
      repository: teliaoss/github-pr-resource

resources:
 #
 # - name: main
 #   type: git
 #   icon: github
 #   check_every: never
 #   webhook_token: gesture
 #   source:
 #     uri: https://github.com/ONSdigital/sml-catalogue.git
 #     branch: main
 #    username: ((github_access_token))
 #     password: x-oauth-basic
 # - name: bdd-test-timer
 #   type: time
 #   source:
 #     # Triggers the tests once per day, just after 7:30am.
 #     start: 7:30
 #     stop: 7:45
 #     location: Europe/London
 #     days: [Monday, Tuesday, Wednesday, Thursday, Friday]
  - name: pr-open
    type: pull-request
    icon: github
    check_every: 1m
    webhook_token: gesture
    source:
      repository: ONSdigital/sml-catalogue
      access_token: ((github_access_token))
      base_branch: main
      disable_forks: true
      states: ["OPEN"]
  #- name: pr-done
  #  type: pull-request
  #  icon: github
  #  check_every: never
  #  webhook_token: gesture
  #  source:
  #    repository: ONSdigital/sml-catalogue
  #    access_token: ((github_access_token))
  #    base_branch: main
  #    disable_forks: true
  #    states: ["CLOSED", "MERGED"]

jobs:
  - name: apply_terraform_and_build_files
    plan:
      - do:
        - get: repo
          resource: pr-open
          trigger: true
          version: every
        - put: repo
          resource: pr-open
          params:
            path: repo
            status: pending
            context: Running_Terraform_&_Building_Files
        - in_parallel:
          - task: terraform-apply-environment
            file: repo/ci/tasks/apply_terraform.yml
            params:
              <<: *github_pull_creds
              <<: *sml_dev_setup
              TERRAFORM_SOURCE: repo/terraform
              WORKSPACE_KEY_INFIX: workspace
          - task: build-files
            file: repo/ci/tasks/build_files.yml
    on_success:
      put: repo
      resource: pr-open
      params:
        path: repo
        status: success
        context: Running_Terraform_&_Building_Files
    on_failure:
      put: repo
      resource: pr-open
      params:
        path: repo
        status: success
        context: Running_Terraform_&_Building_Files
  - name: deploy
    plan:
      - do:
        - get: repo
          resource: pr-open
          trigger: true
          version: every
          passed: [apply_terraform_and_build_files]
        - put: repo
          resource: pr-open
          params:
            path: repo
            status: pending
            context: Deploying_Build
        - task: deploy_code
          file: repo/ci/tasks/deploy.yml
          params:
            <<: *github_pull_creds
            <<: *sml_dev_setup
    on_success:
      put: repo
      resource: pr-open
      params:
        path: repo
        status: success
        context: Deploying_Build
    on_failure:
      put: repo
      resource: pr-open
      params:
        path: repo
        status: success
        context: Deploying_Build
  - name: run_acceptance
    plan:
      - do:
        - get: repo
          resource: pr-open
          trigger: true
          version: every
          passed: [deploy]
        - put: repo
          resource: pr-open
          params:
            path: repo
            status: pending
            context: Running_Acceptance_Tests
        - task: run-acceptance-tests
          file: repo/ci/tasks/run_bdd_tests.yml
    on_success:
      put: repo
      resource: pr-open
      params:
        path: repo
        status: success
        context: Running_Acceptance_Tests
    on_failure:
      put: repo
      resource: pr-open
      params:
        path: repo
        status: success
        context: Running_Acceptance_Tests